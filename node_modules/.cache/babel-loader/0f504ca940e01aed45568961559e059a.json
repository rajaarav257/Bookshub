{"ast":null,"code":"var _jsxFileName = \"/Users/kumarraj/Desktop/BooksHub/my-app/src/login.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // const emailRegex = RegExp(\n//     /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  nameError: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\n\nclass Validate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`\n        --SUBMITTING--\n        \n        Email: ${this.state.email}\n        Password: ${this.state.password}\n      `);\n        const {\n          name,\n          value\n        } = e.target;\n        let formErrors = { ...this.state.formErrors\n        };\n\n        switch (name) {\n          case \"email\":\n            formErrors.email = value.length < 1 ? \"Please enter your email address\" : \"\";\n            console.log(formErrors.email);\n            break;\n\n          case \"password\":\n            formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n            break;\n\n          default:\n            break;\n        }\n\n        this.setState({\n          formErrors,\n          [name]: value\n        }, () => console.log(this.state));\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault(); // const { name, value } = e.target;\n      // let formErrors = { ...this.state.formErrors };\n      //\n      // switch (name) {\n      //\n      //     case \"email\":\n      //         formErrors.email = emailRegex.test(value)\n      //             ? \"\"\n      //             : \"invalid email address\";\n      //         break;\n      //     case \"password\":\n      //         formErrors.password =\n      //             value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n      //         break;\n      //     default:\n      //         break;\n      // }\n      //\n      // this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, formErrors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Already Have an Account?\")))));\n  }\n\n}\n\nexport default Validate;","map":{"version":3,"sources":["/Users/kumarraj/Desktop/BooksHub/my-app/src/login.js"],"names":["React","Component","initialState","name","email","password","nameError","emailError","passwordError","Validate","constructor","props","state","handleSubmit","e","preventDefault","formValid","console","log","value","target","formErrors","length","setState","error","handleChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// const emailRegex = RegExp(\n//     /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\nconst initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    nameError: \"\",\n    emailError: \"\",\n    passwordError: \"\"\n};\n\n\n\nclass Validate extends Component {\n    state = initialState;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            email: null,\n            password: null,\n            formErrors: {\n\n                email: \"\",\n                password: \"\"\n            }\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state)) {\n            console.log(`\n        --SUBMITTING--\n        \n        Email: ${this.state.email}\n        Password: ${this.state.password}\n      `);\n            const { name, value } = e.target;\n            let formErrors = { ...this.state.formErrors };\n            switch (name) {\n\n                case \"email\":\n                    formErrors.email = value.length < 1\n                        ? \"Please enter your email address\"\n                        : \"\";\n                    console.log(formErrors.email);\n                    break;\n                case \"password\":\n                    formErrors.password =\n                        value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n                    break;\n                default:\n                    break;\n            }\n            this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n\n        } else {\n            console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n        }\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        // const { name, value } = e.target;\n        // let formErrors = { ...this.state.formErrors };\n        //\n        // switch (name) {\n        //\n        //     case \"email\":\n        //         formErrors.email = emailRegex.test(value)\n        //             ? \"\"\n        //             : \"invalid email address\";\n        //         break;\n        //     case \"password\":\n        //         formErrors.password =\n        //             value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        //         break;\n        //     default:\n        //         break;\n        // }\n        //\n        // this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n    };\n\n    render() {\n        const { formErrors } = this.state;\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"form-wrapper\">\n                    <h1>Create Account</h1>\n                    <form onSubmit={this.handleSubmit} noValidate>\n                        <div className=\"email\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                className={formErrors.email.length > 0 ? \"error\" : null}\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                name=\"email\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.email.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.email}</span>\n                            )}\n                        </div>\n                        <div className=\"password\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                className={formErrors.password.length > 0 ? \"error\" : null}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.password.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.password}</span>\n                            )}\n                        </div>\n                        <div className=\"createAccount\">\n                            <button type=\"submit\">Create Account</button>\n                            <small>Already Have an Account?</small>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Validate;"]},"metadata":{},"sourceType":"module"}