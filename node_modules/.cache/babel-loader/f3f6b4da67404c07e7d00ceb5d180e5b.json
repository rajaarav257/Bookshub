{"ast":null,"code":"var _jsxFileName = \"/Users/kumarraj/Desktop/BooksHub/my-app/src/login.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // const emailRegex = RegExp(\n//     /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  nameError: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\n\nfunction validates(name, email, password) {\n  // we are going to store errors for all fields\n  // in a signle array\n  const errors = [];\n\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n\n  if (email.length < 5) {\n    errors.push(\"Email should be at least 5 charcters long\");\n  }\n\n  if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\n    errors.push(\"Email should contain a @\");\n  }\n\n  if (email.indexOf(\".\") === -1) {\n    errors.push(\"Email should contain at least one dot\");\n  }\n\n  if (password.length < 6) {\n    errors.push(\"Password should be at least 6 characters long\");\n  }\n\n  return errors;\n}\n\nclass Validate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.validates = () => {\n      let nameError = \"\";\n      let emailError = \"\"; // let passwordError = \"\";\n\n      if (!this.state.password) {\n        nameError = \"Password cannot be blank\";\n      }\n\n      if (!this.state.email.includes(\"@\")) {\n        emailError = \"invalid email\";\n      }\n\n      if (emailError || nameError) {\n        this.setState({\n          emailError,\n          nameError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validates();\n\n      if (isValid) {\n        console.log(this.state); // clear form\n\n        this.setState(initialState);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      placeholder: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), this.state.nameError ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, this.state.emailError) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }), this.state.passwordError ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, this.state.passwordError) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Already Have an Account?\")))));\n  }\n\n}\n\nexport default Validate;","map":{"version":3,"sources":["/Users/kumarraj/Desktop/BooksHub/my-app/src/login.js"],"names":["React","Component","initialState","name","email","password","nameError","emailError","passwordError","validates","errors","length","push","split","filter","x","indexOf","Validate","state","includes","setState","handleSubmit","event","preventDefault","isValid","console","log","render","handleChange","fontSize","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,aAAa,EAAE;AANE,CAArB;;AAQA,SAASC,SAAT,CAAmBN,IAAnB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC;AACA;AACA,QAAMK,MAAM,GAAG,EAAf;;AAEA,MAAIP,IAAI,CAACQ,MAAL,KAAgB,CAApB,EAAuB;AACnBD,IAAAA,MAAM,CAACE,IAAP,CAAY,qBAAZ;AACH;;AAED,MAAIR,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAsB;AAClBD,IAAAA,MAAM,CAACE,IAAP,CAAY,2CAAZ;AACH;;AACD,MAAIR,KAAK,CAACS,KAAN,CAAY,EAAZ,EAAgBC,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,KAAK,GAAlC,EAAuCJ,MAAvC,KAAkD,CAAtD,EAAyD;AACrDD,IAAAA,MAAM,CAACE,IAAP,CAAY,0BAAZ;AACH;;AACD,MAAIR,KAAK,CAACY,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC3BN,IAAAA,MAAM,CAACE,IAAP,CAAY,uCAAZ;AACH;;AAED,MAAIP,QAAQ,CAACM,MAAT,GAAkB,CAAtB,EAAyB;AACrBD,IAAAA,MAAM,CAACE,IAAP,CAAY,+CAAZ;AACH;;AAED,SAAOF,MAAP;AACH;;AAKD,MAAMO,QAAN,SAAuBhB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BiB,KAD6B,GACrBhB,YADqB;;AAAA,SAG7BO,SAH6B,GAGjB,MAAM;AACd,UAAIH,SAAS,GAAG,EAAhB;AACA,UAAIC,UAAU,GAAG,EAAjB,CAFc,CAGd;;AAEA,UAAI,CAAC,KAAKW,KAAL,CAAWb,QAAhB,EAA0B;AACtBC,QAAAA,SAAS,GAAG,0BAAZ;AACH;;AAED,UAAI,CAAC,KAAKY,KAAL,CAAWd,KAAX,CAAiBe,QAAjB,CAA0B,GAA1B,CAAL,EAAqC;AACjCZ,QAAAA,UAAU,GAAG,eAAb;AACH;;AAED,UAAIA,UAAU,IAAID,SAAlB,EAA6B;AACzB,aAAKc,QAAL,CAAc;AAAEb,UAAAA,UAAF;AAAcD,UAAAA;AAAd,SAAd;AACA,eAAO,KAAP;AACH;;AAED,aAAO,IAAP;AACH,KAtB4B;;AAAA,SAwB7Be,YAxB6B,GAwBdC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,OAAO,GAAG,KAAKf,SAAL,EAAhB;;AACA,UAAIe,OAAJ,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,EADS,CAET;;AACA,aAAKE,QAAL,CAAclB,YAAd;AACH;AACJ,KAhC4B;AAAA;;AAkC7ByB,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,KAAKN,YAArB;AAAmC,MAAA,UAAU,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,OAFhB;AAGI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWd,KAHtB;AAII,MAAA,QAAQ,EAAE,KAAKwB,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASK,KAAKV,KAAL,CAAWZ,SAAX,gBACD;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,KAAL,CAAWX,UADhB,CADC,GAKC,IAdN,CADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWb,QAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKuB,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAUK,KAAKV,KAAL,CAAWV,aAAX,gBACD;AAAK,MAAA,KAAK,EAAE;AAAEqB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,KAAL,CAAWV,aADhB,CADC,GAIC,IAdN,CAjBJ,eAiCI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CAjCJ,CAFJ,CADJ,CADJ;AA6CH;;AAlF4B;;AAqFjC,eAAeS,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// const emailRegex = RegExp(\n//     /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\nconst initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    nameError: \"\",\n    emailError: \"\",\n    passwordError: \"\"\n};\nfunction validates(name, email, password) {\n    // we are going to store errors for all fields\n    // in a signle array\n    const errors = [];\n\n    if (name.length === 0) {\n        errors.push(\"Name can't be empty\");\n    }\n\n    if (email.length < 5) {\n        errors.push(\"Email should be at least 5 charcters long\");\n    }\n    if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\n        errors.push(\"Email should contain a @\");\n    }\n    if (email.indexOf(\".\") === -1) {\n        errors.push(\"Email should contain at least one dot\");\n    }\n\n    if (password.length < 6) {\n        errors.push(\"Password should be at least 6 characters long\");\n    }\n\n    return errors;\n}\n\n\n\n\nclass Validate extends Component {\n    state = initialState;\n\n    validates = () => {\n        let nameError = \"\";\n        let emailError = \"\";\n        // let passwordError = \"\";\n\n        if (!this.state.password) {\n            nameError = \"Password cannot be blank\";\n        }\n\n        if (!this.state.email.includes(\"@\")) {\n            emailError = \"invalid email\";\n        }\n\n        if (emailError || nameError) {\n            this.setState({ emailError, nameError });\n            return false;\n        }\n\n        return true;\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const isValid = this.validates();\n        if (isValid) {\n            console.log(this.state);\n            // clear form\n            this.setState(initialState);\n        }\n    };\n\n    render() {\n\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"form-wrapper\">\n                    <h1>Create Account</h1>\n                    <form onSubmit={this.handleSubmit} noValidate>\n                        <div className=\"email\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                name=\"email\"\n                                placeholder=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n\n                            />\n                            {this.state.nameError ? (\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.emailError}\n\n                            </div>\n                            ):null}\n                        </div>\n                        <div className=\"password\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n\n                            />\n                            {this.state.passwordError ? (\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.passwordError}\n                            </div>\n                            ):null}\n                        </div>\n                        <div className=\"createAccount\">\n                            <button type=\"submit\">Create Account</button>\n                            <small>Already Have an Account?</small>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Validate;"]},"metadata":{},"sourceType":"module"}